name: PyPI Nightly Release

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  build:
    runs-on: [self-hosted, ${{ matrix.runner }}]
    strategy:
      matrix:
        runner: [raptor-lake, grace]
    
    steps:
      # Install git first to ensure checkout uses proper git clone instead of ZIP download
      # This is required for version_cli.py to access git metadata for version detection
      - name: Install Git
        run: |
          sudo dnf install -y git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install System Packages
        run: |
          PKG_DIR=.github/workflows/fedora-packages
          for group in base development-tools runtimes; do
            xargs -a "$PKG_DIR/${group}.txt" sudo dnf install -y
          done
          sudo dnf install -y podman
          sudo python3 -m ensurepip --upgrade

      - name: Install cibuildwheel
        run: python3 -m pip install --upgrade pip cibuildwheel

      - name: Modify package name to etops-nightly
        run: |
          cd python
          sed -i 's/name = "etops"/name = "etops-nightly"/' pyproject.toml
          # Verify the change
          grep 'name = "etops-nightly"' pyproject.toml

      - name: Build wheels
        run: |
          cd python
          export SETUPTOOLS_SCM_PRETEND_VERSION=$(python3 version_cli.py)
          echo "Building version: $SETUPTOOLS_SCM_PRETEND_VERSION"
          python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_CONTAINER_ENGINE: podman
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ENVIRONMENT_PASS_LINUX: "SETUPTOOLS_SCM_PRETEND_VERSION"
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y git cmake make gcc-c++ libomp-devel || 
            apt-get update && apt-get install -y git cmake make g++ libomp-dev

      - name: Test wheel import
        run: |
          cd python
          # Install the built wheel and test basic import
          python3 -m pip install wheelhouse/*.whl
          python3 -c "import etops; print('etops-nightly version:', etops.__version__)"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.runner }}
          path: python/wheelhouse/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest # minimal trusted publishing job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      - name: Check dists
        run: python -m pip install --upgrade twine && twine check dist/*
      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
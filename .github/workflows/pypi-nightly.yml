name: PyPI Nightly Release

on:
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            cibw_arch: x86_64
          - runner: ubuntu-22.04-arm
            cibw_arch: aarch64
    runs-on: ["${{ matrix.runner }}"]
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Modify package name to etops-nightly
        run: |
          cd python
          sed -i 's/name = "etops"/name = "etops-nightly"/' pyproject.toml
          # Verify the change
          grep 'name = "etops-nightly"' pyproject.toml

      - name: Build wheels
        run: |
          export SETUPTOOLS_SCM_PRETEND_VERSION=$(python python/version_cli.py)
          echo "Building version: $SETUPTOOLS_SCM_PRETEND_VERSION"
          python -m cibuildwheel python --output-dir wheelhouse
        env:
          CIBW_CONTAINER_ENGINE: docker
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_arch }}
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ENVIRONMENT_PASS_LINUX: "SETUPTOOLS_SCM_PRETEND_VERSION"
          CIBW_BEFORE_ALL_LINUX: |
            if command -v yum >/dev/null 2>&1; then
                yum install -y git cmake make gcc-c++ libomp-devel
            elif command -v dnf >/dev/null 2>&1; then
                dnf install -y git cmake make gcc-c++ libomp-devel
            elif command -v apt-get >/dev/null 2>&1; then
                apt-get update
                apt-get install -y git cmake make g++ libomp-dev
            fi

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.runner }}
          path: wheelhouse/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      - name: Check dists
        run: python -m pip install --upgrade twine && twine check dist/*
      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true